var tipuesearch = {
  "pages": [
    {
      "title": "License",
      "text": "Licenses\nSource code files and code snippets included in this project are\nlicensed under a BSD 3-clause license with a patent\ngrant.  All other content in\nthis project, including content produced directly from unmodified\nsource code and code snippets, is licensed under a Creative Commons\nAttribution 4.0 International (CC BY 4.0)\nlicense.\nCopyright (c) 2017-2020, PlasmaPy Developers.\nBSD 3-clause license with patent grant\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n\nRedistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n\nRedistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n\nNeither the name of PlasmaPy nor the names of its contributors may\n  be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\n\nSubject to the terms and conditions of this license, each copyright\nholder and contributor hereby grants to those receiving rights under\nthis license a perpetual, worldwide, non-exclusive, no-charge,\nroyalty-free, irrevocable (except for failure to satisfy the\nconditions of this license) patent license to make, have made, use,\noffer to sell, sell, import, and otherwise transfer this software,\nwhere such license applies only to those patent claims, already\nacquired or hereafter acquired, licensable by such copyright holder or\ncontributor that are necessarily infringed by:\n(a) their Contribution(s) (the licensed copyrights of copyright\nholders and non-copyrightable additions of contributors, in source or\nbinary form) alone; or\n(b) combination of their Contribution(s) with the work of authorship\nto which such Contribution(s) was added by such copyright holder or\ncontributor, if, at the time the Contribution is added, such addition\ncauses such combination to be necessarily infringed. The patent\nlicense shall not apply to any other combinations which include the\nContribution.\nExcept as expressly stated above, no rights or licenses from any\ncopyright holder or contributor is granted under this license, whether\nexpressly, by implication, estoppel or otherwise.\nDisclaimer\nThis software is provided by the copyright holders and contributors\n\"as is\" and any express or implied warranties, including, but not\nlimited to, the implied warranties of merchantability and fitness for\na particular purpose are disclaimed. In no event shall the copyright\nholder or contributors be liable for any direct, indirect, incidental,\nspecial, exemplary, or consequential damages (including, but not\nlimited to, procurement of substitute goods or services; loss of use,\ndata, or profits; or business interruption) however caused and on any\ntheory of liability, whether in contract, strict liability, or tort\n(including negligence or otherwise) arising in any way out of the use\nof this software, even if advised of the possibility of such damage.",
      "tags": "",
      "url": "https://www.plasmapy.org/license/"
    },
    {
      "title": "1st PlasmaPy Mini-Conference",
      "text": "1st PlasmaPy Workshop\nApril 20-22, 2020\nBryn Mawr College, Pennsylvania\n\n\n    \n        !! -- Workshop Cancelled\n    \n    \n        Due to the rapid development of COVID-19 (coronavirus) and out of an abundance\n        of caution, the PlasmaPy workshop organizers have decided to cancel PlasmaPy's \n        first workshop.\n    \n    \n        We originally intended to web-cast portions of the workshop, but with no \n        in-person attendees we feel this format would lead to a poor transmission of \n        ideas between PlasmaPy and its community.  At this time, it is crucial that \n        PlasmaPy fosters a strong community interaction to not only to convey its \n        goals and ambitions, but to receive vital feed back from our community.  \n        Thus, we have decided to replace this workshop with a series of webinars\n        and discussions to be held over the coming months.  As more information \n        on the series becomes available we will update the community.\n    \n    \n        Thank you for your continued support,\n        The PlasmaPy Workshop Organizers\n    \n\n\nOverview\nAgenda\nRegistration\nTravel & Housing\nTravel Funding for Students\nWeb Participation\nSupport & Acknowledgements\n Overview\nPlasmaPy's first workshop, which is set up as a 3 day meeting for PlasmaPy developers and \nthe PlasmaPy community. The first day (4/20) is designated for the PlasmaPy Team to \ndiscuss code development and project direction.  The remaining two days (4/21-4/22) are \ndesigned for community interaction.  Goals of the meeting are to (1) further develop \nPlasmaPy's roadmap, (2) inform the broader PlasmaPy community of PlasmaPy's objectives \nand direction, (3) demonstrate PlasmaPy's capabilities to the community, and (4) receive \nvaluable feedback from the community.\n Agenda\n\nNOTE\nAs the meeting approaches, please check the agenda for updates.  As presentation material\nbecomes available we will post links for slides and additional information.\n\nDay 1 - April 20, 2020\nDay 1 is intended for the PlasmaPy committee and internal topics.  Attendees will be\nrestricted to the PlasmaPy committee and developers.  We'll address topics related to \npackage development, community outreach, and education.\n\n\n\nTime\nSection\nTitle\nSpeaker/Leader\n\n\n\n\n08:30 - 09:00\n0\nARRIVAL & COFFEE\n\n\n\n09:00 - 09:15\n1\nWelcome: Introduction & Overview\n\n\n\n09:15 - 09:35\n2\nRoadmap: Overview & Current Projections\n\n\n\n09:35 - 10:20\n3\nRoadmap: Formulary Development\n\n\n\n10:20 - 10:35\n\nCOFFEE BREAK\n\n\n\n10:35 - 11:20\n4\nRoadmap: Simulations Development\n\n\n\n11:20 - 12:05\n5\nRoadmap: Experimental Diagnostics Development\n\n\n\n12:05 - 13:30\n\nLUNCH BREAK\n\n\n\n13:30 - 14:15\n6\nRoadmap: Development of Remaining Elements\n\n\n\n14:15 - 15:00\n7\nCommunity Interaction & Contribution\n\n\n\n15:00 - 15:15\n\nCOFFEE BREAK\n\n\n\n15:15 - 16:00\n8\nEducation & Outreach\n\n\n\n16:00 - 16:45\n9\nStudent Projects\n\n\n\n16:45 - 17:30\n10\nOpen Discussion for Uncovered Topics\n\n\n\n17:30 - 18:00\n11\nSummarize Tasks & Responsibilities\n\n\n\n\n\nADJOURN\n\n\n\n\n\nDay 2 - April 21, 2020\nDay 2 is the first day for the broader PlasmaPy Community.  The day will be divided into\nthree parts, (1) introducing/sharing PlasmaPy's plans to the community, (2) demonstrating\nexamples of how the code works, and (3) conversing with the community to get feedback\nand suggestions.  This day will also be available via web-cast.\n\n\n\nTime\nSection\nTitle\nSpeaker/Leader\n\n\n\n\n08:30 - 09:00\n0\nARRIVAL & COFFEE\n\n\n\n09:00 - 09:10\n1\nWelcome to Users\n\n\n\n09:10 - 10:00\n2\nPlasmaPy Overview\n\n\n\n10:00 - 10:20\n3\nPlasmaPy - Simulations\n\n\n\n10:20 - 10:35\n\nCOFFEE BREAK\n\n\n\n10:35 - 10:55\n4\nPlasmaPy - Experimental Diagnostics\n\n\n\n10:55 - 11:45\n5\nCommunity Interaction\n\n\n\n11:45 - 13:15\n\nLUNCH BREAK\n\n\n\n13:15 - 13:35\n6\nEducation & Outreach\n\n\n\n13:35 - 13:55\n7\nContributing to PlasmaPy\n\n\n\n13:55 - 14:30\n8\nDemo - Working through a Pull Request\n\n\n\n14:30 - 14:50\n9\nDemo - #2\n\n\n\n14:50 - 15:05\n\nCOFFEE BREAK\n\n\n\n15:05 - 15:25\n10\nDemo - #3\n\n\n\n15:25 - 17:00\n11\nCommunity Discussion\n\n\n\n\n\nADJOURN\n\n\n\n\n\nDay 3 - April 22, 2020\nDay 3 is a workshop day to provide hands-on experience with PlasmaPy and one-on-one \ncommunity interaction.  In the morning session we will provide a few mini \nexample projects to highlight PlasmaPy's features.  The afternoon session will\nbe an open session where users can interact directly with the PlasmaPy team, asking\nan relevant questions, getting help on existing projects, etc.\n\n\n\nTime\nSection\nTitle\nSpeaker/Leader\n\n\n\n\n08:30 - 09:00\n0\nARRIVAL & COFFEE\n\n\n\n09:00 - 12:00\n1\nWorkshop: Examples Projects\n\n\n\n12:00 - 13:30\n\nLUNCH BREAK\n\n\n\n13:30 - 16:00\n4\nOpen Session\n\n\n\n\n\nADJOURN\n\n\n\n\n\n Travel & Housing\n\nNOTE\nDue to the ongoing development of the novel coronavirus (COVID-19), travel restrictions\nmay be in place when this workshop occurs.  If this is the case, we will still proceed \nwith the workshop via a web-cast.  Additionally, we strongly\nrecommend that any booked travel plans are refundable.\n\nIn the near future we will post a few recommendations for travel to and housing \nlocations around Bryn Mawr.\n\n Travel Funding for Students\nAs part of our support from the NSF-CSSI program, we will offer some amount of travel\nfunding for interested students to attend.  The exact amount will depend on the \nnumber of participating students.  Please check back soon as we will update with\ninstructions on how to apply for travel funding.\n\n Web Participation\nWe currently plan to have days 2 & 3 available on web-cast so non-attendees and still \nparticipate.  As the meeting approaches, we will post info on how to attend via the\nweb-cast.\n\n Support & Acknowledgments\nOngoing development of PlasmaPy is supported by the U.S. National Science Foundation \n(NSF) and NASA, with many contributions from the broader plasma physics and open source \ncommunities. Early development of PlasmaPy was supported by the U.S. Department of \nEnergy, the Smithsonian Institution, and Google Summer of Code.\nSupport for this workshop is provided through a grant from the NSF Cyberinfrastructure for \nSustained Scientific Innovation (CSSI)  program.",
      "tags": "",
      "url": "https://www.plasmapy.org/meetings/1st_workshop_2020_at_bryn_mawr/"
    },
    {
      "title": "62nd APS DPP - 11.04 Mini-Conference Followups",
      "text": "62nd APS DPP - 11.04 Mini-Conference | Post-Meeting Discussions\nGrowing an open-source software ecosystem for plasma science\n\n\nWhere: On Zoom \nDay 1: Tuesday, November 17th at 21 UTC / 4 pm EST / 1 pm PST \nDay 2: Thursday, November 19th at 19 UTC / 2 pm EST / 11 am PST \n\n\nIn order to capitalize on the opportunities afforded by bringing together the\ndiversity of speakers and attendees and perspectives during this year's \nmini-conference, we plan to host two post-meeting discussions.  Here\nwe can continue the discussion on fostering the open-source community, bringing\nin more members to our projects, organizing inter-project efforts, improving\npackage interoperability, etc.",
      "tags": "",
      "url": "https://www.plasmapy.org/meetings/aps/62nd_dpp_mini_conf_followups/"
    },
    {
      "title": "PlasmaPy Meetings",
      "text": "Weekly Meetings\n\nWeekly Community Meeting: Every Tuesday at 11 am PT / 2 pm ET\n\n\nPlasmaPy \"Office\" Hours: Every Thursday at 12 pm PT / 3 pm ET\n\n\n\nPast Meetings\n\n2020 April:  1st PlasmaPy Workshop [CANCELLED]\nApril 20-22, 2020\nPlasmaPy's first workshop, which is set up as a 3 day meeting for PlasmaPy developers and \nthe PlasmaPy community. The first day (4/20) is designated for the PlasmaPy Team to discuss\ncode development and project direction.  The remaining two days (4/21-4/22) are designed \nfor community interaction, informing the community of PlasmaPy's goals and features, as \nwell as, getting vital feedback from the community.\n\n\n62nd APS DPP - 11.04 Mini-Conference: Growing an open source software ecosystem for plasma science\nNovember 11 & 12, 2020\n\n\n62nd APS DPP - 11.04 Mini-Conference | Post-Meeting Discussions\nDay 1: November 17, 2020 at 21 UTC / 4 pm EST / 1 pm PST\nDay 2: November 19, 2020 at 19 UTC / 2 pm EST / 11 am PST",
      "tags": "",
      "url": "https://www.plasmapy.org/meetings/"
    },
    {
      "title": "PlasmaPy \"Office\" Hours",
      "text": "PlasmaPy \"Office\" Hours\nDo you have a question about PlasmaPy?  Would you like to learn how to\nbecome active in the PlasmaPy project?  Do you have an idea for a\ngreat new feature or want to start an affiliated package?\nIf so, then please join us for informal PlasmaPy \"office\" hours on\nmost Thursdays at 3 pm ET / 12 pm PT.  We will meet on Zoom.  The\nschedule is published on our calendar.  Any last minute changes will\nbe posted on our Matrix chat.\nWe will not hold office hours on federal holidays in the US, the\nlast two Thursdays of December, the first Thursday in January, or\nduring the APS DPP meeting.\nPlasmaPy developers can be reached at other times via the Matrix\nchat, in particular if the time for \"office\" hours does not work for\nyou.",
      "tags": "",
      "url": "https://www.plasmapy.org/meetings/office_hours/"
    },
    {
      "title": "Weekly PlasmaPy Community Meeting",
      "text": "Weekly PlasmaPy Community Meeting\nTuesdays at 2 pm ET / 11 am PT\nWhere: on Zoom \nTime: Every Tuesday at 2 pm ET / 11 am PT \nMinutes & Agenda: on HackMD \nCalendar: on Google Calendar \n\nOverview\nPlasmaPy's weekly online community meeting is held on most Tuesdays at\n2 pm ET / 11 am PT.  This call is hosted on Zoom with agendas and\nminutes available on HackMD.  The schedule is published on our\ncalendar.  Any last minute changes will be posted on our Matrix\nchat.\nWe will usually not hold community meetings on federal holidays in\nthe US, the last two Tuesdays of December, the first Tuesday of\nJanuary, or during the APS DPP meeting.",
      "tags": "",
      "url": "https://www.plasmapy.org/meetings/weekly/"
    },
    {
      "title": "About the PlasmaPy Project",
      "text": "About PlasmaPy\nThe mission of the PlasmaPy Project is to foster the creation of a\nfully open source software ecosystem for plasma research and\neducation.  The PlasmaPy core package intends to be for plasma\nscience what Astropy is for astronomy \u2014 a collection of\nfunctionality commonly used and shared between plasma physicists and\nresearchers globally, running within and leveraging the open source\nscientific Python ecosystem.",
      "tags": "",
      "url": "https://www.plasmapy.org/about/"
    },
    {
      "title": "Plasma Packages",
      "text": "PlasmaPy's charter includes promoting open-source software for all of \nthe plasma community, and not just plasmapy.  We feel the entire community \nbenefits when there are multiple efforts trying to build functionality for all \naspects of the plasma field.  As such, we want to promote any ongoing effort.  This\npage displays projects that have requested to be shown.  If you want your \nproject include, and increase its visibility, then please submit a request.\n\n    \n        Submit Request\n    \n\n\nAll projects/packages are considered Community Packages \n\n\n\n\n    \n\n, but packages designed with\nplasmapy interoperability are marked as Affiliated Packages \n\n\n\n\n    \n\n.\n\n\n\n\n\n\n    \n\n        \n        \n    \n    \n    \n    \n    \n    \n    \n    \n        \n            \n                    \n                    \n            \n        \n        \n        \n            \n                \n                    \n                        plasmapy\n                    \n                    \n                \n                \n                    home\n                     | \n                    repo\n                \n            \n            \n                \n                    PlasmaPy is an open-source community developed Python 3 package for plasma physics.  PlasmaPy intends to be a collection of functionality commonly used and shared between plasma physicists and researchers globally.\n                \n            \n            \n                \n                    License: BSD 3-clause with patent grant\n                \n            \n            \n                \n                    Keywords: physics, plasma, Python 3\n                \n            \n        \n        \n    \n\n        \n        \n    \n    \n    \n    \n    \n    \n    \n    \n        \n            \n                    \n                        \n                            ALOHA\n                        \n                    \n            \n        \n        \n        \n            \n                \n                    \n                        ALOHA\n                    \n                    \n                \n                \n                    home\n                     | \n                    repo\n                \n            \n            \n                \n                    ALOHA is a coupling code for Lower Hybrid Current Drive antennas facing tokamak magnetized fusion plasma.  This coupling code is based on the linear coupling theory. It allows one to model the coupling of a 'grill'-like antenna to a cold plasma of the kind one can find in Tokamaks. It allows taking into account advanced antennas (such as multijunctions or passive-active multijunction antennas).\n                \n            \n            \n                \n                    License: BSD 3-clause\n                \n            \n            \n                \n                    Keywords: Fortran, fusion, MatLab, physics, plasma, simulation\n                \n            \n        \n        \n    \n\n        \n        \n    \n    \n    \n    \n    \n    \n    \n    \n        \n            \n                    \n                    \n            \n        \n        \n        \n            \n                \n                    \n                        omfit\n                    \n                    \n                \n                \n                    home\n                     | \n                    repo\n                \n            \n            \n                \n                    OMFIT - One Modeling Framework for Integrated Tasks - is an integrated modeling  and experimental data analysis framework written in python.  The goal of OMFIT is to enhance existing scientific workflows and enable new integrated modeling capabilities.\n                \n            \n            \n                \n                    License: User Agreement\n                \n            \n            \n                \n                    Keywords: diagnostics, fusion, physics, plasma, Python, Python 3, simulation\n                \n            \n        \n        \n    \n\n        \n        \n    \n    \n    \n    \n    \n    \n    \n    \n        \n            \n                    \n                        \n                            PyMethes\n                        \n                    \n            \n        \n        \n        \n            \n                \n                    \n                        PyMethes\n                    \n                    \n                \n                \n                    home\n                     | \n                    repo\n                \n            \n            \n                \n                    A Monte Carlo simulation of electron transport in low temperature plasmas.\n                \n            \n            \n                \n                    License: GPLv3\n                \n            \n            \n                \n                    Keywords: low-temperature, physics, plasma, Python 3, simulation\n                \n            \n        \n        \n    \n\n        \n        \n    \n    \n    \n    \n    \n    \n    \n    \n        \n            \n                    \n                        \n                            tofu\n                        \n                    \n            \n        \n        \n        \n            \n                \n                    \n                        tofu\n                    \n                    \n                        \n                            \n    \n\n                        \n                \n                \n                    home\n                     | \n                    repo\n                \n            \n            \n                \n                    tofu is an open-source python library.  It aims at providing the user with a ready-set toolbox for modelling synthetic diagnostics and performing tomographic inversions on linear or toroidal (quasi-axisymmetric) fusion devices.  It is relevant for diagnostics integrating an emissivity on a set of Lines of Sight or Volumes of Sight corresponding to as many detectors or pixels, and for which the plasma can be considered transparent (i.e. not for radio-frequencies / microwaves).\n                \n            \n            \n                \n                    License: MIT\n                \n            \n            \n                \n                    Keywords: diagnostics, fusion, physics, plasma, Python 3",
      "tags": "",
      "url": "https://www.plasmapy.org/affiliates/"
    },
    {
      "title": "Contribute to PlasmaPy",
      "text": "Contributing to PlasmaPy\nThere are numerous ways to contribute to PlasmaPy, including by\nproviding code and documentation, suggesting and discussing ideas,\nsubmitting issues and bug reports, and engaging the broader plasma\nphysics community.  \nImposter syndrome disclaimer: We want your help. No, really.\nThere may be a little voice inside your head that is telling you that you're not\nready to be an open source contributor; that your skills aren't nearly good\nenough to contribute. What could you possibly offer a project like this one?\nWe assure you - the little voice in your head is wrong. If you can write code at\nall, you can contribute code to open source. Contributing to open source\nprojects is a fantastic way to advance one's coding skills. Writing perfect code\nisn't the measure of a good developer (that would disqualify all of us!); it's\ntrying to create something, making mistakes, and learning from those\nmistakes. That's how we all improve, and we are happy to help others learn.\nBeing an open source contributor doesn't just mean writing code, either. You can\nhelp out by writing documentation, tests, or even giving feedback about the\nproject (and yes - that includes giving feedback about the contribution\nprocess). Some of these contributions may be the most valuable to the project as\na whole, because you're coming to the project with fresh eyes, so you can see\nthe errors and assumptions that seasoned contributors have glossed over.\nThis disclaimer was originally written by\nAdrienne Lowe for a\nPyCon talk, and was adapted by \nyt in their README file based on its use \nin the README file for the MetPy project.\nIt was then adapted by PlasmaPy.\nSharing ideas\nThere are several methods of communication that are being used in the\nearly stages of PlasmaPy development:\n\n\nSigning up for the PlasmaPy email\n  list will allow\n  you to participate in broader discussions and keep up with the\n  latest developments.\n\n\nThe PlasmaPy repository on\n  GitHub is the best place to\n  submit issues and\n  review pull requests.\n\n\nThe PlasmaPy Matrix or \n  Gitter joint channel\n  is a great place to have informal conversations, coordinate efforts,\n  and share ideas.  \n\nWe have biweekly telecons which are announced on the email list.\n\nContributing code or documentation to PlasmaPy\nIf you see something you'd like to work on amongst our\nissues, or if you've got\na great idea for something to include in the package, start hacking away on\nthat! However, please announce your intent first in the relevant issue (or make\none if necessary) to make sure there is no work duplication.\nYou can find most of what you should know in the Contributing Guide.\nPlease note that PlasmaPy has a Code of Conduct.\nIssues marked by the community as help wanted mean just that - either they're\ngood contributions for outsiders or there's an issue in the ongoing work that\nrequires a second opinion. Please consider these first!",
      "tags": "",
      "url": "https://www.plasmapy.org/contribute/"
    },
    {
      "title": "The PlasmaPy Project",
      "text": "PlasmaPy\n                \"Office\" Hours\n                Thursdays at 3:00 pm ET\n            \n        \n        \n    \n    \n    \n        \n        \n            \n                Weekly Community Meeting\n                Tuesday 2:00 pm ET\n            \n        \n        \n    \n    \n    \n        \n        \n            \n                Hack Week\n                \n            \n        \n        \n    \n\n\n\n\n\n    \n    \n\n\n\nThe goal of the PlasmaPy Project is to foster the creation of an open source Python ecosystem for plasma research and education.  The PlasmaPy package contains core functionality for this software ecosystem, while affiliated packages will contain more specialized functionality.\nInstall PlasmaPy\nPlasmaPy may be installed from the command line using pip:\npip install plasmapy\n\n\nNote: If you run into difficulty using pip, you may also try using pip3 or python -m pip or python3 -m pip as the command.\nIf you have a working installation of conda, then you may install PlasmaPy with\nconda install -c conda-forge plasmapy\n\n\nPlasmaPy's online documentation contains more \ndetailed installation instructions.\nIf you are unfamiliar with Python, please check out the \nPython website for more information.\nLearn PlasmaPy\nPlasmaPy's documentation describes how to use PlasmaPy and provides several examples. \nGet Help\nThe quickest way to reach PlasmaPy users and developers is through PlasmaPy's\nElement chat room.\nPlasmaPy's GitHub Discussions\npage is an ideal place for\nlonger discussions on more detailed topics.\nContribute and Report Bugs\nMaking feature requests, reporting bugs, and offering suggestions are some of the most helpful ways to contribute to the ongoing development of PlasmaPy.  The documentation discusses how to contribute code and documentation to PlasmaPy and contains a development guide.\nAcknowledgments\nOngoing development of PlasmaPy is supported by the U.S. National Science Foundation, with many contributions from the broader plasma physics and open source communities.  Past development of PlasmaPy has been supported by the U.S. Department of Energy, the Smithsonian Institution, NASA, and Google Summer of Code.",
      "tags": "",
      "url": "https://www.plasmapy.org/"
    },
    {
      "title": "PlasmaPy v0.6.0 release!",
      "text": "PlasmaPy 0.6.0\nWe're really happy to announce that we've just released PlasmaPy version\n0.6.0! \nWe'd like to thank the wonderful people who have contributed to this release:\n\nAnthony Vo\nDhawal Modi *\nDominik Sta\u0144czak\nDrozdov David *\nErik Everson\nKevin Montes *\nNick Murphy\nPeter Heuer\nRamiz Qudsi\nTiger Du\n\nWhere a * indicates their first contribution to PlasmaPy.\nNote also that this release drops Python 3.6 support; we now\nrequire Python 3.7, following NumPy's NEP\n29.\nThe cool new features\nNote: these are my (Dominik's) personal highlights. There's more, but these make the\nprettiest plots right now.\nTwo-fluid dispersion relations\n\n\n\nIn PR #932 Ramiz Qudsi\nimplemented P. M. Bellan's 2012 full two-fluid dispersion relation for any\nelectron-ion system. Take a look at the notebook introducing\nthat.\nProton radiography\n\n\n\nPeter Heuer designed and implemented a framework for synthetic proton\nradiography. This is a multi-PR tour de force that simulates particles moving\nthrough EM fields and hitting a detector plane, generating histograms such as\nthe above. I'd point you to the notebook on that, but there's three right\nnow.\nAnalysis & Diagnostic framework; Langmuir probes\n\n\n\nErik Everson is spearheading work on our analysis & diagnostic\nframework.  As the\nfirst example, we've got a new and improved set of tools for swept Langmuir\nanalysis.\nWhat's next?\nFor this year, we're planning to have a roughly 3-month cadence for releases. Thus,\nthe next release is anticipated around mid June.\nIt should contain a refactored particle tracker, support for neoclassical\ntransport coefficient calculations for axisymmetric devices along with our\nfirst forays into tools for fusion.\nOne final note: we're discussing transitioning to some form of Calendar\nVersioning. If you have thoughts on that, we'd be happy\nto hear them!  Come join the discussion on our Matrix\nchatroom.",
      "tags": "plasmapy,release",
      "url": "https://www.plasmapy.org/posts/plasmapy-v060-release/"
    },
    {
      "title": "PlasmaPy v0.4.0 release",
      "text": "We are pleased to announce the release of PlasmaPy version 0.4.0.  This\nrelease adds several new functions to plasmapy.formulary, aliases\n(with trailing underscores) for the most commonly used formulary\nfunctions, classes to represent custom and dimensionless particles,\nand a new module in plasmapy.diagnostics for Thomson scattering.\nThe plasmapy.atomic subpackage was renamed to\nplasmapy.particles as part of an ongoing plan to reorganize\nPlasmaPy's subpackage structure.\nIn order to install PlasmaPy, please\nrefer to the installation instructions on PlasmaPy's\ndocumentation page.",
      "tags": "plasmapy,release",
      "url": "https://www.plasmapy.org/posts/plasmapy-v0_4_0-release/"
    },
    {
      "title": "PlasmaPy v0.3.1 release",
      "text": "We are excited to announce the release of PlasmaPy version 0.3.1.\nThis release includes two new subpackages: plasmapy.formulary,\nwhich consolidates much of the functionality that was formerly in\nplasmapy.physics, plasmapy.mathematics, and\nplasmapy.transport; and plasmapy.simulation, which contains\nour particle tracker and will be the place to consolidate tools\nrelated to plasma simulations.  These changes are part of an ongoing\nplan to reorganize PlasmaPy's subpackage structure that will continue\nin version 0.4.  In order to install PlasmaPy, please refer to the\ninstallation instructions\non PlasmaPy's documentation page.",
      "tags": "plasmapy,release",
      "url": "https://www.plasmapy.org/posts/plasmapy-v031-release/"
    },
    {
      "title": "PlasmaPy v0.2.0 release!",
      "text": "A few days ago the long overdue PlasmaPy release v0.2.0 hit PyPI with the force of a coronal mass ejection. You can upgrade via pip install --upgrade plasmapy.\nIf you'd rather use conda, though, you now have the option, and that is why we delayed the announcement: we now have our very own conda-forge feedstock and you can install PlasmaPy using conda install -c conda-forge plasmapy.\nPlease refer to the release notes to see what's changed.\nHappy coding, everyone!",
      "tags": "plasmapy,release",
      "url": "https://www.plasmapy.org/posts/plasmapy-v020-release/"
    },
    {
      "title": "PlasmaPy v0.1.1 bugfix release!",
      "text": "We have just released PlasmaPy v0.1.1, our first bugfix release which attempts to correct many of the flaws in our code we only noticed while releasing v0.1!\nTake a look at the release notes to see what's changed.\nAs usual (although this is likely the first time you have reason to run this command), you should now be able to update via pip install --upgrade plasmapy.\nHot plasmas, and happy coding, everyone!",
      "tags": "plasmapy,release",
      "url": "https://www.plasmapy.org/posts/plasmapy-v011-bugfix-release/"
    },
    {
      "title": "PlasmaPy v0.1 release!",
      "text": "I address you tonight not as a programmer of Python, not as a maintainer of a\nrepository, but as a citizen of open source.\nWe are faced with the very newest of releases.\nGitHub calls this one PlasmaPy v0.1.0, the first of the alphas.\nAnd yet, for the first time in the history of this project our team has the\ntechnology to prevent its own procrastination.\nAll of you pip installing with us need to know that everything that could be\ndone to delay this release has been called into service.\nThe coder's thirst for excellence, perfectionism, every step into the abyss of\ntransport theory, every adventurous refactor of docs, all of our combined ideas\nfor features and improvements, even the code reviews that\nwe performed have provided us with the tools to prevent this exciting event.\nThrough all the chaos that is our Git tree, through all of the PEP8 and\nthe Matrix discussion,\nthrough all the pain of learning Sphinx and rebasing,\nthrough all of our ~2000 commits,\nthere is one thing that has nourished our souls, and pushed us to complete\nthis release, and that is our pretty plots. Oh, and the\npossibility to\napply\nmore\ndecorators.\nThe dreams of the entire PlasmaPy community are focused tonight on these 31\nbrave committers,\npushing onto the main branch.\nAnd may we all, plasma enthusiasts the world over, see this release through.\nThermal speed,\nand a \\(\\sqrt{2}\\) to you,\n~PlasmaPy",
      "tags": "plasmapy,release",
      "url": "https://www.plasmapy.org/posts/plasmapy-v01-release/"
    },
    {
      "title": "Search",
      "text": "Search results appear here.",
      "tags": "",
      "url": "https://www.plasmapy.org/search/"
    }
  ]
};